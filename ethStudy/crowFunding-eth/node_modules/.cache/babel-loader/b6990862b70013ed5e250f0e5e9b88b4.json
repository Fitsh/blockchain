{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/** \n * @file allevents.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2014\n */\nvar sha3 = require('../utils/sha3');\n\nvar SolidityEvent = require('./event');\n\nvar formatters = require('./formatters');\n\nvar utils = require('../utils/utils');\n\nvar Filter = require('./filter');\n\nvar watches = require('./methods/watches');\n\nvar AllSolidityEvents = function (requestManager, json, address) {\n  this._requestManager = requestManager;\n  this._json = json;\n  this._address = address;\n};\n\nAllSolidityEvents.prototype.encode = function (options) {\n  options = options || {};\n  var result = {};\n  ['fromBlock', 'toBlock'].filter(function (f) {\n    return options[f] !== undefined;\n  }).forEach(function (f) {\n    result[f] = formatters.inputBlockNumberFormatter(options[f]);\n  });\n  result.address = this._address;\n  return result;\n};\n\nAllSolidityEvents.prototype.decode = function (data) {\n  data.data = data.data || '';\n  data.topics = data.topics || [];\n  var eventTopic = data.topics[0].slice(2);\n\n  var match = this._json.filter(function (j) {\n    return eventTopic === sha3(utils.transformToFullName(j));\n  })[0];\n\n  if (!match) {\n    // cannot find matching event?\n    console.warn('cannot find event for log');\n    return data;\n  }\n\n  var event = new SolidityEvent(this._requestManager, match, this._address);\n  return event.decode(data);\n};\n\nAllSolidityEvents.prototype.execute = function (options, callback) {\n  if (utils.isFunction(arguments[arguments.length - 1])) {\n    callback = arguments[arguments.length - 1];\n    if (arguments.length === 1) options = null;\n  }\n\n  var o = this.encode(options);\n  var formatter = this.decode.bind(this);\n  return new Filter(this._requestManager, o, watches.eth(), formatter, callback);\n};\n\nAllSolidityEvents.prototype.attachToContract = function (contract) {\n  var execute = this.execute.bind(this);\n  contract.allEvents = execute;\n};\n\nmodule.exports = AllSolidityEvents;","map":{"version":3,"sources":["/home/fitsh/Code/practice/blockchain/ethStudy/lotteryProject/node_modules/_web3@0.18.4@web3/lib/web3/allevents.js"],"names":["sha3","require","SolidityEvent","formatters","utils","Filter","watches","AllSolidityEvents","requestManager","json","address","_requestManager","_json","_address","prototype","encode","options","result","filter","f","undefined","forEach","inputBlockNumberFormatter","decode","data","topics","eventTopic","slice","match","j","transformToFullName","console","warn","event","execute","callback","isFunction","arguments","length","o","formatter","bind","eth","attachToContract","contract","allEvents","module","exports"],"mappings":"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","sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** \n * @file allevents.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2014\n */\n\nvar sha3 = require('../utils/sha3');\nvar SolidityEvent = require('./event');\nvar formatters = require('./formatters');\nvar utils = require('../utils/utils');\nvar Filter = require('./filter');\nvar watches = require('./methods/watches');\n\nvar AllSolidityEvents = function (requestManager, json, address) {\n    this._requestManager = requestManager;\n    this._json = json;\n    this._address = address;\n};\n\nAllSolidityEvents.prototype.encode = function (options) {\n    options = options || {};\n    var result = {};\n\n    ['fromBlock', 'toBlock'].filter(function (f) {\n        return options[f] !== undefined;\n    }).forEach(function (f) {\n        result[f] = formatters.inputBlockNumberFormatter(options[f]);\n    });\n\n    result.address = this._address;\n\n    return result;\n};\n\nAllSolidityEvents.prototype.decode = function (data) {\n    data.data = data.data || '';\n    data.topics = data.topics || [];\n\n    var eventTopic = data.topics[0].slice(2);\n    var match = this._json.filter(function (j) {\n        return eventTopic === sha3(utils.transformToFullName(j));\n    })[0];\n\n    if (!match) { // cannot find matching event?\n        console.warn('cannot find event for log');\n        return data;\n    }\n\n    var event = new SolidityEvent(this._requestManager, match, this._address);\n    return event.decode(data);\n};\n\nAllSolidityEvents.prototype.execute = function (options, callback) {\n\n    if (utils.isFunction(arguments[arguments.length - 1])) {\n        callback = arguments[arguments.length - 1];\n        if(arguments.length === 1)\n            options = null;\n    }\n\n    var o = this.encode(options);\n    var formatter = this.decode.bind(this);\n    return new Filter(this._requestManager, o, watches.eth(), formatter, callback);\n};\n\nAllSolidityEvents.prototype.attachToContract = function (contract) {\n    var execute = this.execute.bind(this);\n    contract.allEvents = execute;\n};\n\nmodule.exports = AllSolidityEvents;\n\n"]},"metadata":{},"sourceType":"script"}