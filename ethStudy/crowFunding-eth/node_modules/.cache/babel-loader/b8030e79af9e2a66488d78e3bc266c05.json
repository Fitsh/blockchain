{"ast":null,"code":"var _jsxFileName = \"/home/fitsh/Code/practice/blockchain/ethStudy/lotteryProject/src/App.js\";\nimport React, { Component } from 'react';\nimport CardExampleCard from './display/ui';\nimport 'semantic-ui-css/semantic.min.css';\nimport web3 from \"./utils/initWeb3\";\nimport lotteryInstance from \"./eth/lotteryInstance\"; //function App() {\n//  return (\n//      <p> Hello, World </p>\n//  );\n//}\n\nconsole.log(lotteryInstance.methods.manager().call());\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.play = async () => {\n      // 处理真正的业务逻辑\n      // 1. 调用play方法\n      // 2. 转1 ether\n      //\n      this.setState({\n        isClicked: true\n      });\n\n      try {\n        await lotteryInstance.methods.play().send({\n          from: this.state.currentAccount,\n          //value: 1 * 10 ** 18,\n          value: web3.utils.toWei('1', \"ether\"),\n          gas: '3000000'\n        });\n        this.setState({\n          isClicked: false\n        }); // 重新加载页面\n\n        window.location.reload(true);\n        alert(\"投注成功~\");\n      } catch (e) {\n        this.setState({\n          isClicked: false\n        });\n        alert(\"投注失败~\");\n        console.log(e);\n      }\n    };\n\n    this.kaijiang = async () => {\n      // 处理真正的业务逻辑\n      //\n      this.setState({\n        isClicked: true\n      });\n\n      try {\n        await lotteryInstance.methods.kaijiang().send({\n          from: this.state.currentAccount,\n          //value: 1 * 10 ** 18,\n          //value: web3.utils.toWei('1', \"ether\"),\n          gas: '3000000'\n        });\n        this.setState({\n          isClicked: false\n        }); // 显示中奖人\n\n        let winner = await lotteryInstance.methods.winner().call();\n        window.location.reload(true);\n        alert(`开奖成功~\\n中奖人：${winner}`);\n      } catch (e) {\n        this.setState({\n          isClicked: false\n        });\n        alert(\"开奖失败~\");\n        console.log(e);\n      }\n    };\n\n    this.tuijiang = async () => {\n      // 处理真正的业务逻辑\n      //\n      this.setState({\n        isClicked: true\n      });\n\n      try {\n        await lotteryInstance.methods.tuijiang().send({\n          from: this.state.currentAccount,\n          //value: 1 * 10 ** 18,\n          //value: web3.utils.toWei('1', \"ether\"),\n          gas: '3000000'\n        });\n        this.setState({\n          isClicked: false\n        });\n        window.location.reload(true);\n        alert(\"退奖成功~\");\n      } catch (e) {\n        this.setState({\n          isClicked: false\n        });\n        alert(\"退奖失败~\");\n        console.log(e);\n      }\n    };\n\n    this.state = {\n      manager: '',\n      round: 0,\n      winner: '',\n      playersCount: 0,\n      balance: 0,\n      players: [],\n      currentAccount: '',\n      isClicked: false,\n      isShowButton: '' // 控制管理员按钮是否显示\n\n    };\n  } // 内置钩子函数，在页面渲染之后调用\n\n\n  componentDidMount() {} // 内置钩子函数，在页面渲染之前调用\n\n\n  async componentWillMount() {\n    // 获取当前的所有地址\n    let accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n\n    let _manager = await lotteryInstance.methods.manager().call();\n\n    let _round = await lotteryInstance.methods.round().call();\n\n    let _winner = await lotteryInstance.methods.winner().call();\n\n    let _playersCount = await lotteryInstance.methods.getPlayersCount().call(); //  单位wei，需要转换为ether\n\n\n    let _balanceWei = await lotteryInstance.methods.getBalance().call(); // 从wei单位转为ether单位\n\n\n    let _balance = web3.utils.fromWei(_balanceWei, \"ether\");\n\n    let _players = await lotteryInstance.methods.getPlayers().call();\n\n    let isShowButton = accounts[0] === _manager ? 'inline' : 'none';\n    this.setState({\n      manager: _manager,\n      round: _round,\n      winner: _winner,\n      playersCount: _playersCount,\n      balance: _balance,\n      players: _players,\n      currentAccount: accounts[0],\n      isClicked: false,\n      isShowButton\n    });\n  } // 卸载钩子函数\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardExampleCard, {\n      manager: this.state.manager,\n      round: this.state.round,\n      winner: this.state.winner,\n      playersCount: this.state.playersCount,\n      balance: this.state.balance,\n      players: this.state.players,\n      currentAccount: this.state.currentAccount,\n      play: this.play,\n      kaijiang: this.kaijiang,\n      tuijiang: this.tuijiang,\n      isClicked: this.state.isClicked,\n      isShowButton: this.state.isShowButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/fitsh/Code/practice/blockchain/ethStudy/lotteryProject/src/App.js"],"names":["React","Component","CardExampleCard","web3","lotteryInstance","console","log","methods","manager","call","App","constructor","play","setState","isClicked","send","from","state","currentAccount","value","utils","toWei","gas","window","location","reload","alert","e","kaijiang","winner","tuijiang","round","playersCount","balance","players","isShowButton","componentDidMount","componentWillMount","accounts","eth","getAccounts","_manager","_round","_winner","_playersCount","getPlayersCount","_balanceWei","getBalance","_balance","fromWei","_players","getPlayers","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport CardExampleCard from './display/ui'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport web3 from \"./utils/initWeb3\"\nimport lotteryInstance from \"./eth/lotteryInstance\"\n\n//function App() {\n//  return (\n//      <p> Hello, World </p>\n//  );\n//}\n\nconsole.log(lotteryInstance.methods.manager().call())\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            manager: '',\n            round: 0,\n            winner: '',\n            playersCount: 0,\n            balance: 0,\n            players: [],\n            currentAccount: '',\n            isClicked: false,\n            isShowButton: '', // 控制管理员按钮是否显示\n        }\n    }\n\n    // 内置钩子函数，在页面渲染之后调用\n    componentDidMount() {\n\n    }\n\n    // 内置钩子函数，在页面渲染之前调用\n    async componentWillMount() {\n        // 获取当前的所有地址\n        let accounts = await web3.eth.getAccounts()\n        console.log(accounts)\n        let _manager = await lotteryInstance.methods.manager().call()\n        let _round = await lotteryInstance.methods.round().call()\n        let _winner = await lotteryInstance.methods.winner().call()\n        let _playersCount = await lotteryInstance.methods.getPlayersCount().call()\n\n        //  单位wei，需要转换为ether\n        let _balanceWei = await lotteryInstance.methods.getBalance().call()\n        // 从wei单位转为ether单位\n        let _balance = web3.utils.fromWei(_balanceWei, \"ether\")\n\n        let _players = await lotteryInstance.methods.getPlayers().call()\n\n        let isShowButton = accounts[0] === _manager ? 'inline':'none'\n\n        this.setState({\n            manager: _manager,\n            round: _round,\n            winner: _winner,\n            playersCount: _playersCount,\n            balance: _balance,\n            players: _players,\n            currentAccount: accounts[0],\n            isClicked: false,\n            isShowButton,\n        })\n    }\n\n    // 卸载钩子函数\n    \n\n    play = async () => {\n        // 处理真正的业务逻辑\n        // 1. 调用play方法\n        // 2. 转1 ether\n        //\n        this.setState({isClicked: true})\n        try {\n            await lotteryInstance.methods.play().send({\n                from: this.state.currentAccount,\n                //value: 1 * 10 ** 18,\n                value: web3.utils.toWei('1', \"ether\"),\n                gas: '3000000',\n            })\n            this.setState({isClicked: false})\n            // 重新加载页面\n            window.location.reload(true)\n            alert(\"投注成功~\")\n        } catch(e) {\n            this.setState({isClicked: false})\n            alert(\"投注失败~\")\n            console.log(e)\n        }\n    }\n\n    kaijiang = async () => {\n        // 处理真正的业务逻辑\n        //\n        this.setState({isClicked: true})\n        try {\n            await lotteryInstance.methods.kaijiang().send({\n                from: this.state.currentAccount,\n                //value: 1 * 10 ** 18,\n                //value: web3.utils.toWei('1', \"ether\"),\n                gas: '3000000',\n            })\n            this.setState({isClicked: false})\n            // 显示中奖人\n            let winner = await lotteryInstance.methods.winner().call()\n            window.location.reload(true)\n            alert(`开奖成功~\\n中奖人：${winner}`)\n        } catch(e) {\n            this.setState({isClicked: false})\n            alert(\"开奖失败~\")\n            console.log(e)\n        }\n    }\n\n    tuijiang = async () => {\n        // 处理真正的业务逻辑\n        //\n        this.setState({isClicked: true})\n        try {\n            await lotteryInstance.methods.tuijiang().send({\n                from: this.state.currentAccount,\n                //value: 1 * 10 ** 18,\n                //value: web3.utils.toWei('1', \"ether\"),\n                gas: '3000000',\n            })\n            this.setState({isClicked: false})\n            window.location.reload(true)\n            alert(\"退奖成功~\")\n        } catch(e) {\n            this.setState({isClicked: false})\n            alert(\"退奖失败~\")\n            console.log(e)\n        }\n    }\n\n    render() {\n      return (\n          <div>\n              <CardExampleCard\n               manager={this.state.manager} \n               round={this.state.round} \n               winner={this.state.winner} \n               playersCount={this.state.playersCount} \n               balance={this.state.balance} \n               players={this.state.players} \n               currentAccount={this.state.currentAccount} \n               play={this.play}\n               kaijiang={this.kaijiang}\n               tuijiang={this.tuijiang}\n               isClicked={this.state.isClicked}\n               isShowButton={this.state.isShowButton}\n              />\n          </div>\n      );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}