{"ast":null,"code":"let Web3 = require(\"web3\"); //let HDWalletProvider = require(\"truffle-hdwallet-provider\")\n\n\nlet web3 = new Web3();\nconsole.log(\"window 的web3版本:\", window.web3.version); // 设置网络\n// 使用用户自己的Provider来填充web3\n\nlet init = async () => {\n  if (window.ethereum) {\n    let provider = window.ethereum;\n    web3.setProvider(provider);\n\n    try {\n      await provider.enable(); // 异步操作\n    } catch (error) {\n      console.log(\"授权失败\");\n    }\n  } else if (window.web3) {\n    web3.setProvider(window.web3.currentProvider);\n  } else {\n    console.log(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n  }\n};\n\ninit();\nconsole.log(\"我们的web3版本:\", web3.version);\nmodule.exports = web3;","map":{"version":3,"sources":["/home/fitsh/Code/practice/blockchain/ethStudy/lotteryProject/src/utils/initWeb3.js"],"names":["Web3","require","web3","console","log","window","version","init","ethereum","provider","setProvider","enable","error","currentProvider","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB,C,CACA;;;AAEA,IAAIC,IAAI,GAAG,IAAIF,IAAJ,EAAX;AAEAG,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,MAAM,CAACH,IAAP,CAAYI,OAA3C,E,CAEA;AACA;;AACA,IAAIC,IAAI,GAAG,YAAY;AACnB,MAAGF,MAAM,CAACG,QAAV,EAAoB;AAChB,QAAIC,QAAQ,GAAGJ,MAAM,CAACG,QAAtB;AACAN,IAAAA,IAAI,CAACQ,WAAL,CAAiBD,QAAjB;;AAEA,QAAI;AACA,YAAMA,QAAQ,CAACE,MAAT,EAAN,CADA,CACyB;AAC5B,KAFD,CAEE,OAAMC,KAAN,EAAa;AACXT,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;AACJ,GATD,MASO,IAAIC,MAAM,CAACH,IAAX,EAAiB;AACpBA,IAAAA,IAAI,CAACQ,WAAL,CAAiBL,MAAM,CAACH,IAAP,CAAYW,eAA7B;AACH,GAFM,MAEA;AACHV,IAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACH;AACJ,CAfD;;AAiBAG,IAAI;AAEJJ,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,IAAI,CAACI,OAA/B;AACAQ,MAAM,CAACC,OAAP,GAAiBb,IAAjB","sourcesContent":["let Web3 = require(\"web3\")\n//let HDWalletProvider = require(\"truffle-hdwallet-provider\")\n\nlet web3 = new Web3()\n\nconsole.log(\"window 的web3版本:\", window.web3.version)\n\n// 设置网络\n// 使用用户自己的Provider来填充web3\nlet init = async () => {\n    if(window.ethereum) {\n        let provider = window.ethereum\n        web3.setProvider(provider)\n\n        try {\n            await provider.enable()  // 异步操作\n        } catch(error) {\n            console.log(\"授权失败\")\n        }\n    } else if (window.web3) {\n        web3.setProvider(window.web3.currentProvider)\n    } else {\n        console.log(\"Non-Ethereum browser detected. You should consider trying MetaMask!\")\n    }\n}\n\ninit()\n\nconsole.log(\"我们的web3版本:\", web3.version)\nmodule.exports = web3\n"]},"metadata":{},"sourceType":"module"}