{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/** @file shh.js\n * @authors:\n *   Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\nvar Method = require('../method');\n\nvar formatters = require('../formatters');\n\nvar Filter = require('../filter');\n\nvar watches = require('./watches');\n\nvar Shh = function (web3) {\n  this._requestManager = web3._requestManager;\n  var self = this;\n  methods().forEach(function (method) {\n    method.attachToObject(self);\n    method.setRequestManager(self._requestManager);\n  });\n};\n\nShh.prototype.filter = function (fil, callback) {\n  return new Filter(this._requestManager, fil, watches.shh(), formatters.outputPostFormatter, callback);\n};\n\nvar methods = function () {\n  var post = new Method({\n    name: 'post',\n    call: 'shh_post',\n    params: 1,\n    inputFormatter: [formatters.inputPostFormatter]\n  });\n  var newIdentity = new Method({\n    name: 'newIdentity',\n    call: 'shh_newIdentity',\n    params: 0\n  });\n  var hasIdentity = new Method({\n    name: 'hasIdentity',\n    call: 'shh_hasIdentity',\n    params: 1\n  });\n  var newGroup = new Method({\n    name: 'newGroup',\n    call: 'shh_newGroup',\n    params: 0\n  });\n  var addToGroup = new Method({\n    name: 'addToGroup',\n    call: 'shh_addToGroup',\n    params: 0\n  });\n  return [post, newIdentity, hasIdentity, newGroup, addToGroup];\n};\n\nmodule.exports = Shh;","map":{"version":3,"sources":["/home/fitsh/Code/practice/blockchain/ethStudy/lotteryProject/node_modules/_web3@0.18.4@web3/lib/web3/methods/shh.js"],"names":["Method","require","formatters","Filter","watches","Shh","web3","_requestManager","self","methods","forEach","method","attachToObject","setRequestManager","prototype","filter","fil","callback","shh","outputPostFormatter","post","name","call","params","inputFormatter","inputPostFormatter","newIdentity","hasIdentity","newGroup","addToGroup","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAgBA;;;;;AAMA,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,eAAD,CAAxB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,WAAD,CAArB;;AAEA,IAAII,GAAG,GAAG,UAAUC,IAAV,EAAgB;AACtB,OAAKC,eAAL,GAAuBD,IAAI,CAACC,eAA5B;AAEA,MAAIC,IAAI,GAAG,IAAX;AAEAC,EAAAA,OAAO,GAAGC,OAAV,CAAkB,UAASC,MAAT,EAAiB;AAC/BA,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,IAAtB;AACAG,IAAAA,MAAM,CAACE,iBAAP,CAAyBL,IAAI,CAACD,eAA9B;AACH,GAHD;AAIH,CATD;;AAWAF,GAAG,CAACS,SAAJ,CAAcC,MAAd,GAAuB,UAAUC,GAAV,EAAeC,QAAf,EAAyB;AAC5C,SAAO,IAAId,MAAJ,CAAW,KAAKI,eAAhB,EAAiCS,GAAjC,EAAsCZ,OAAO,CAACc,GAAR,EAAtC,EAAqDhB,UAAU,CAACiB,mBAAhE,EAAqFF,QAArF,CAAP;AACH,CAFD;;AAIA,IAAIR,OAAO,GAAG,YAAY;AAEtB,MAAIW,IAAI,GAAG,IAAIpB,MAAJ,CAAW;AAClBqB,IAAAA,IAAI,EAAE,MADY;AAElBC,IAAAA,IAAI,EAAE,UAFY;AAGlBC,IAAAA,MAAM,EAAE,CAHU;AAIlBC,IAAAA,cAAc,EAAE,CAACtB,UAAU,CAACuB,kBAAZ;AAJE,GAAX,CAAX;AAOA,MAAIC,WAAW,GAAG,IAAI1B,MAAJ,CAAW;AACzBqB,IAAAA,IAAI,EAAE,aADmB;AAEzBC,IAAAA,IAAI,EAAE,iBAFmB;AAGzBC,IAAAA,MAAM,EAAE;AAHiB,GAAX,CAAlB;AAMA,MAAII,WAAW,GAAG,IAAI3B,MAAJ,CAAW;AACzBqB,IAAAA,IAAI,EAAE,aADmB;AAEzBC,IAAAA,IAAI,EAAE,iBAFmB;AAGzBC,IAAAA,MAAM,EAAE;AAHiB,GAAX,CAAlB;AAMA,MAAIK,QAAQ,GAAG,IAAI5B,MAAJ,CAAW;AACtBqB,IAAAA,IAAI,EAAE,UADgB;AAEtBC,IAAAA,IAAI,EAAE,cAFgB;AAGtBC,IAAAA,MAAM,EAAE;AAHc,GAAX,CAAf;AAMA,MAAIM,UAAU,GAAG,IAAI7B,MAAJ,CAAW;AACxBqB,IAAAA,IAAI,EAAE,YADkB;AAExBC,IAAAA,IAAI,EAAE,gBAFkB;AAGxBC,IAAAA,MAAM,EAAE;AAHgB,GAAX,CAAjB;AAMA,SAAO,CACHH,IADG,EAEHM,WAFG,EAGHC,WAHG,EAIHC,QAJG,EAKHC,UALG,CAAP;AAOH,CAxCD;;AA0CAC,MAAM,CAACC,OAAP,GAAiB1B,GAAjB","sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file shh.js\n * @authors:\n *   Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar Method = require('../method');\nvar formatters = require('../formatters');\nvar Filter = require('../filter');\nvar watches = require('./watches');\n\nvar Shh = function (web3) {\n    this._requestManager = web3._requestManager;\n\n    var self = this;\n\n    methods().forEach(function(method) { \n        method.attachToObject(self);\n        method.setRequestManager(self._requestManager);\n    });\n};\n\nShh.prototype.filter = function (fil, callback) {\n    return new Filter(this._requestManager, fil, watches.shh(), formatters.outputPostFormatter, callback);\n};\n\nvar methods = function () { \n\n    var post = new Method({\n        name: 'post', \n        call: 'shh_post', \n        params: 1,\n        inputFormatter: [formatters.inputPostFormatter]\n    });\n\n    var newIdentity = new Method({\n        name: 'newIdentity',\n        call: 'shh_newIdentity',\n        params: 0\n    });\n\n    var hasIdentity = new Method({\n        name: 'hasIdentity',\n        call: 'shh_hasIdentity',\n        params: 1\n    });\n\n    var newGroup = new Method({\n        name: 'newGroup',\n        call: 'shh_newGroup',\n        params: 0\n    });\n\n    var addToGroup = new Method({\n        name: 'addToGroup',\n        call: 'shh_addToGroup',\n        params: 0\n    });\n\n    return [\n        post,\n        newIdentity,\n        hasIdentity,\n        newGroup,\n        addToGroup\n    ];\n};\n\nmodule.exports = Shh;\n\n"]},"metadata":{},"sourceType":"script"}