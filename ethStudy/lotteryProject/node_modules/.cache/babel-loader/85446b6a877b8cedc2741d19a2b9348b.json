{"ast":null,"code":"const async = require('async');\n\nconst inherits = require('util').inherits;\n\nconst ethUtil = require('ethereumjs-util');\n\nconst Subprovider = require('./subprovider.js');\n\nconst Stoplight = require('../util/stoplight.js');\n\nmodule.exports = FilterSubprovider; // handles the following RPC methods:\n//   eth_newBlockFilter\n//   eth_newPendingTransactionFilter\n//   eth_newFilter\n//   eth_getFilterChanges\n//   eth_uninstallFilter\n//   eth_getFilterLogs\n\ninherits(FilterSubprovider, Subprovider);\n\nfunction FilterSubprovider(opts) {\n  opts = opts || {};\n  const self = this;\n  self.filterIndex = 0;\n  self.filters = {};\n  self.filterDestroyHandlers = {};\n  self.asyncBlockHandlers = {};\n  self.asyncPendingBlockHandlers = {};\n  self._ready = new Stoplight();\n\n  self._ready.go();\n\n  self.pendingBlockTimeout = opts.pendingBlockTimeout || 4000;\n  self.checkForPendingBlocksActive = false; // we dont have engine immeditately\n\n  setTimeout(function () {\n    // asyncBlockHandlers require locking provider until updates are completed\n    self.engine.on('block', function (block) {\n      // pause processing\n      self._ready.stop(); // update filters\n\n\n      var updaters = valuesFor(self.asyncBlockHandlers).map(function (fn) {\n        return fn.bind(null, block);\n      });\n      async.parallel(updaters, function (err) {\n        if (err) console.error(err); // unpause processing\n\n        self._ready.go();\n      });\n    });\n  });\n}\n\nFilterSubprovider.prototype.handleRequest = function (payload, next, end) {\n  const self = this;\n\n  switch (payload.method) {\n    case 'eth_newBlockFilter':\n      self.newBlockFilter(end);\n      return;\n\n    case 'eth_newPendingTransactionFilter':\n      self.newPendingTransactionFilter(end);\n      self.checkForPendingBlocks();\n      return;\n\n    case 'eth_newFilter':\n      self.newLogFilter(payload.params[0], end);\n      return;\n\n    case 'eth_getFilterChanges':\n      self._ready.await(function () {\n        self.getFilterChanges(payload.params[0], end);\n      });\n\n      return;\n\n    case 'eth_getFilterLogs':\n      self._ready.await(function () {\n        self.getFilterLogs(payload.params[0], end);\n      });\n\n      return;\n\n    case 'eth_uninstallFilter':\n      self._ready.await(function () {\n        self.uninstallFilter(payload.params[0], end);\n      });\n\n      return;\n\n    default:\n      next();\n      return;\n  }\n};\n\nFilterSubprovider.prototype.newBlockFilter = function (cb) {\n  const self = this;\n\n  self._getBlockNumber(function (err, blockNumber) {\n    if (err) return cb(err);\n    var filter = new BlockFilter({\n      blockNumber: blockNumber\n    });\n    var newBlockHandler = filter.update.bind(filter);\n    self.engine.on('block', newBlockHandler);\n\n    var destroyHandler = function () {\n      self.engine.removeListener('block', newBlockHandler);\n    };\n\n    self.filterIndex++;\n    var hexFilterIndex = intToHex(self.filterIndex);\n    self.filters[hexFilterIndex] = filter;\n    self.filterDestroyHandlers[hexFilterIndex] = destroyHandler;\n    cb(null, hexFilterIndex);\n  });\n};\n\nFilterSubprovider.prototype.newLogFilter = function (opts, cb) {\n  const self = this;\n\n  self._getBlockNumber(function (err, blockNumber) {\n    if (err) return cb(err);\n    var filter = new LogFilter(opts);\n    var newLogHandler = filter.update.bind(filter);\n\n    var blockHandler = function (block, cb) {\n      self._logsForBlock(block, function (err, logs) {\n        if (err) return cb(err);\n        logs.forEach(newLogHandler);\n        cb();\n      });\n    };\n\n    self.filterIndex++;\n    self.asyncBlockHandlers[self.filterIndex] = blockHandler;\n    var hexFilterIndex = intToHex(self.filterIndex);\n    self.filters[hexFilterIndex] = filter;\n    cb(null, hexFilterIndex);\n  });\n};\n\nFilterSubprovider.prototype.newPendingTransactionFilter = function (cb) {\n  const self = this;\n  var filter = new PendingTransactionFilter();\n  var newTxHandler = filter.update.bind(filter);\n\n  var blockHandler = function (block, cb) {\n    self._txHashesForBlock(block, function (err, txs) {\n      if (err) return cb(err);\n      txs.forEach(newTxHandler);\n      cb();\n    });\n  };\n\n  self.filterIndex++;\n  self.asyncPendingBlockHandlers[self.filterIndex] = blockHandler;\n  var hexFilterIndex = intToHex(self.filterIndex);\n  self.filters[hexFilterIndex] = filter;\n  cb(null, hexFilterIndex);\n};\n\nFilterSubprovider.prototype.getFilterChanges = function (filterId, cb) {\n  const self = this;\n  var filter = self.filters[filterId];\n  if (!filter) console.warn('FilterSubprovider - no filter with that id:', filterId);\n  if (!filter) return cb(null, []);\n  var results = filter.getChanges();\n  filter.clearChanges();\n  cb(null, results);\n};\n\nFilterSubprovider.prototype.getFilterLogs = function (filterId, cb) {\n  const self = this;\n  var filter = self.filters[filterId];\n  if (!filter) console.warn('FilterSubprovider - no filter with that id:', filterId);\n  if (!filter) return cb(null, []);\n\n  if (filter.type === 'log') {\n    self.emitPayload({\n      method: 'eth_getLogs',\n      params: [{\n        fromBlock: filter.fromBlock,\n        toBlock: filter.toBlock,\n        address: filter.address,\n        topics: filter.topics\n      }]\n    }, function (err, res) {\n      if (err) return cb(err);\n      cb(null, res.result);\n    });\n  } else {\n    var results = filter.getAllResults();\n    cb(null, results);\n  }\n};\n\nFilterSubprovider.prototype.uninstallFilter = function (filterId, cb) {\n  const self = this;\n  var filter = self.filters[filterId];\n\n  if (!filter) {\n    cb(null, false);\n    return;\n  }\n\n  var destroyHandler = self.filterDestroyHandlers[filterId];\n  delete self.filters[filterId];\n  delete self.asyncBlockHandlers[filterId];\n  delete self.asyncPendingBlockHandlers[filterId];\n  delete self.filterDestroyHandlers[filterId];\n  if (destroyHandler) destroyHandler();\n  cb(null, true);\n}; // private\n// check for pending blocks\n\n\nFilterSubprovider.prototype.checkForPendingBlocks = function () {\n  const self = this;\n  if (self.checkForPendingBlocksActive) return;\n  var activePendingTxFilters = !!Object.keys(self.asyncPendingBlockHandlers).length;\n\n  if (activePendingTxFilters) {\n    self.checkForPendingBlocksActive = true;\n    self.emitPayload({\n      method: 'eth_getBlockByNumber',\n      params: ['pending', true]\n    }, function (err, res) {\n      if (err) {\n        self.checkForPendingBlocksActive = false;\n        console.error(err);\n        return;\n      }\n\n      self.onNewPendingBlock(res.result, function (err) {\n        if (err) console.error(err);\n        self.checkForPendingBlocksActive = false;\n        setTimeout(self.checkForPendingBlocks.bind(self), self.pendingBlockTimeout);\n      });\n    });\n  }\n};\n\nFilterSubprovider.prototype.onNewPendingBlock = function (block, cb) {\n  const self = this; // update filters\n\n  var updaters = valuesFor(self.asyncPendingBlockHandlers).map(function (fn) {\n    return fn.bind(null, block);\n  });\n  async.parallel(updaters, cb);\n};\n\nFilterSubprovider.prototype._getBlockNumber = function (cb) {\n  const self = this;\n  var blockNumber = bufferToHex(self.engine.currentBlock.number);\n  cb(null, blockNumber);\n};\n\nFilterSubprovider.prototype._logsForBlock = function (block, cb) {\n  const self = this;\n  var blockNumber = bufferToHex(block.number);\n  self.emitPayload({\n    method: 'eth_getLogs',\n    params: [{\n      fromBlock: blockNumber,\n      toBlock: blockNumber\n    }]\n  }, function (err, response) {\n    if (err) return cb(err);\n    if (response.error) return cb(response.error);\n    cb(null, response.result);\n  });\n};\n\nFilterSubprovider.prototype._txHashesForBlock = function (block, cb) {\n  const self = this;\n  var txs = block.transactions; // short circuit if empty\n\n  if (txs.length === 0) return cb(null, []); // txs are already hashes\n\n  if ('string' === typeof txs[0]) {\n    cb(null, txs); // txs are obj, need to map to hashes\n  } else {\n    var results = txs.map(tx => tx.hash);\n    cb(null, results);\n  }\n}; //\n// BlockFilter\n//\n\n\nfunction BlockFilter(opts) {\n  // console.log('BlockFilter - new')\n  const self = this;\n  self.type = 'block';\n  self.engine = opts.engine;\n  self.blockNumber = opts.blockNumber;\n  self.updates = [];\n}\n\nBlockFilter.prototype.update = function (block) {\n  // console.log('BlockFilter - update')\n  const self = this;\n  var blockHash = bufferToHex(block.hash);\n  self.updates.push(blockHash);\n};\n\nBlockFilter.prototype.getChanges = function () {\n  const self = this;\n  var results = self.updates; // console.log('BlockFilter - getChanges:', results.length)\n\n  return results;\n};\n\nBlockFilter.prototype.clearChanges = function () {\n  // console.log('BlockFilter - clearChanges')\n  const self = this;\n  self.updates = [];\n}; //\n// LogFilter\n//\n\n\nfunction LogFilter(opts) {\n  // console.log('LogFilter - new')\n  const self = this;\n  self.type = 'log';\n  self.fromBlock = opts.fromBlock || 'latest';\n  self.toBlock = opts.toBlock || 'latest';\n  self.address = opts.address ? normalizeHex(opts.address) : opts.address;\n  self.topics = opts.topics || [];\n  self.updates = [];\n  self.allResults = [];\n}\n\nLogFilter.prototype.validateLog = function (log) {\n  // console.log('LogFilter - validateLog:', log)\n  const self = this; // check if block number in bounds:\n  // console.log('LogFilter - validateLog - blockNumber', self.fromBlock, self.toBlock)\n\n  if (blockTagIsNumber(self.fromBlock) && hexToInt(self.fromBlock) >= hexToInt(log.blockNumber)) return false;\n  if (blockTagIsNumber(self.toBlock) && hexToInt(self.toBlock) <= hexToInt(log.blockNumber)) return false; // address is correct:\n  // console.log('LogFilter - validateLog - address', self.address)\n\n  if (self.address && self.address !== log.address) return false; // topics match:\n  // topics are position-dependant\n  // topics can be nested to represent `or` [[a || b], c]\n  // topics can be null, representing a wild card for that position\n  // console.log('LogFilter - validateLog - topics', log.topics)\n  // console.log('LogFilter - validateLog - against topics', self.topics)\n\n  var topicsMatch = self.topics.reduce(function (previousMatched, topicPattern, index) {\n    // abort in progress\n    if (!previousMatched) return false; // wild card\n\n    if (!topicPattern) return true; // pattern is longer than actual topics\n\n    var logTopic = log.topics[index];\n    if (!logTopic) return false; // check each possible matching topic\n\n    var subtopicsToMatch = Array.isArray(topicPattern) ? topicPattern : [topicPattern];\n    var topicDoesMatch = subtopicsToMatch.filter(function (subTopic) {\n      return logTopic === subTopic;\n    }).length > 0;\n    return topicDoesMatch;\n  }, true); // console.log('LogFilter - validateLog - '+(topicsMatch ? 'approved!' : 'denied!')+' ==============')\n\n  return topicsMatch;\n};\n\nLogFilter.prototype.update = function (log) {\n  // console.log('LogFilter - update')\n  const self = this; // validate filter match\n\n  var validated = self.validateLog(log);\n  if (!validated) return; // add to results\n\n  self.updates.push(log);\n  self.allResults.push(log);\n};\n\nLogFilter.prototype.getChanges = function () {\n  // console.log('LogFilter - getChanges')\n  const self = this;\n  var results = self.updates;\n  return results;\n};\n\nLogFilter.prototype.getAllResults = function () {\n  // console.log('LogFilter - getAllResults')\n  const self = this;\n  var results = self.allResults;\n  return results;\n};\n\nLogFilter.prototype.clearChanges = function () {\n  // console.log('LogFilter - clearChanges')\n  const self = this;\n  self.updates = [];\n}; //\n// PendingTxFilter\n//\n\n\nfunction PendingTransactionFilter() {\n  // console.log('PendingTransactionFilter - new')\n  const self = this;\n  self.type = 'pendingTx';\n  self.updates = [];\n  self.allResults = [];\n}\n\nPendingTransactionFilter.prototype.validateUnique = function (tx) {\n  const self = this;\n  return self.allResults.indexOf(tx) === -1;\n};\n\nPendingTransactionFilter.prototype.update = function (tx) {\n  // console.log('PendingTransactionFilter - update')\n  const self = this; // validate filter match\n\n  var validated = self.validateUnique(tx);\n  if (!validated) return; // add to results\n\n  self.updates.push(tx);\n  self.allResults.push(tx);\n};\n\nPendingTransactionFilter.prototype.getChanges = function () {\n  // console.log('PendingTransactionFilter - getChanges')\n  const self = this;\n  var results = self.updates;\n  return results;\n};\n\nPendingTransactionFilter.prototype.getAllResults = function () {\n  // console.log('PendingTransactionFilter - getAllResults')\n  const self = this;\n  var results = self.allResults;\n  return results;\n};\n\nPendingTransactionFilter.prototype.clearChanges = function () {\n  // console.log('PendingTransactionFilter - clearChanges')\n  const self = this;\n  self.updates = [];\n}; // util\n\n\nfunction normalizeHex(hexString) {\n  return hexString.slice(0, 2) === '0x' ? hexString : '0x' + hexString;\n}\n\nfunction intToHex(value) {\n  return ethUtil.intToHex(value);\n}\n\nfunction hexToInt(hexString) {\n  return Number(hexString);\n}\n\nfunction bufferToHex(buffer) {\n  return '0x' + buffer.toString('hex');\n}\n\nfunction blockTagIsNumber(blockTag) {\n  return blockTag && ['earliest', 'latest', 'pending'].indexOf(blockTag) === -1;\n}\n\nfunction valuesFor(obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n}","map":{"version":3,"sources":["/home/fitsh/Code/practice/blockchain/ethStudy/lotteryProject/node_modules/_web3-provider-engine@8.6.1@web3-provider-engine/subproviders/filters.js"],"names":["async","require","inherits","ethUtil","Subprovider","Stoplight","module","exports","FilterSubprovider","opts","self","filterIndex","filters","filterDestroyHandlers","asyncBlockHandlers","asyncPendingBlockHandlers","_ready","go","pendingBlockTimeout","checkForPendingBlocksActive","setTimeout","engine","on","block","stop","updaters","valuesFor","map","fn","bind","parallel","err","console","error","prototype","handleRequest","payload","next","end","method","newBlockFilter","newPendingTransactionFilter","checkForPendingBlocks","newLogFilter","params","await","getFilterChanges","getFilterLogs","uninstallFilter","cb","_getBlockNumber","blockNumber","filter","BlockFilter","newBlockHandler","update","destroyHandler","removeListener","hexFilterIndex","intToHex","LogFilter","newLogHandler","blockHandler","_logsForBlock","logs","forEach","PendingTransactionFilter","newTxHandler","_txHashesForBlock","txs","filterId","warn","results","getChanges","clearChanges","type","emitPayload","fromBlock","toBlock","address","topics","res","result","getAllResults","activePendingTxFilters","Object","keys","length","onNewPendingBlock","bufferToHex","currentBlock","number","response","transactions","tx","hash","updates","blockHash","push","normalizeHex","allResults","validateLog","log","blockTagIsNumber","hexToInt","topicsMatch","reduce","previousMatched","topicPattern","index","logTopic","subtopicsToMatch","Array","isArray","topicDoesMatch","subTopic","validated","validateUnique","indexOf","hexString","slice","value","Number","buffer","toString","blockTag","obj","key"],"mappings":"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","sourcesContent":["const async = require('async')\nconst inherits = require('util').inherits\nconst ethUtil = require('ethereumjs-util')\nconst Subprovider = require('./subprovider.js')\nconst Stoplight = require('../util/stoplight.js')\n\nmodule.exports = FilterSubprovider\n\n// handles the following RPC methods:\n//   eth_newBlockFilter\n//   eth_newPendingTransactionFilter\n//   eth_newFilter\n//   eth_getFilterChanges\n//   eth_uninstallFilter\n//   eth_getFilterLogs\n\ninherits(FilterSubprovider, Subprovider)\n\nfunction FilterSubprovider(opts) {\n  opts = opts || {}\n  const self = this\n  self.filterIndex = 0\n  self.filters = {}\n  self.filterDestroyHandlers = {}\n  self.asyncBlockHandlers = {}\n  self.asyncPendingBlockHandlers = {}\n  self._ready = new Stoplight()\n  self._ready.go()\n  self.pendingBlockTimeout = opts.pendingBlockTimeout || 4000\n  self.checkForPendingBlocksActive = false\n\n  // we dont have engine immeditately\n  setTimeout(function(){\n    // asyncBlockHandlers require locking provider until updates are completed\n    self.engine.on('block', function(block){\n      // pause processing\n      self._ready.stop()\n      // update filters\n      var updaters = valuesFor(self.asyncBlockHandlers)\n      .map(function(fn){ return fn.bind(null, block) })\n      async.parallel(updaters, function(err){\n        if (err) console.error(err)\n        // unpause processing\n        self._ready.go()\n      })\n    })\n  })\n\n}\n\nFilterSubprovider.prototype.handleRequest = function(payload, next, end){\n  const self = this\n  switch(payload.method){\n\n    case 'eth_newBlockFilter':\n      self.newBlockFilter(end)\n      return\n\n    case 'eth_newPendingTransactionFilter':\n      self.newPendingTransactionFilter(end)\n      self.checkForPendingBlocks()\n      return\n\n    case 'eth_newFilter':\n      self.newLogFilter(payload.params[0], end)\n      return\n\n    case 'eth_getFilterChanges':\n      self._ready.await(function(){\n        self.getFilterChanges(payload.params[0], end)\n      })\n      return\n\n    case 'eth_getFilterLogs':\n      self._ready.await(function(){\n        self.getFilterLogs(payload.params[0], end)\n      })\n      return\n\n    case 'eth_uninstallFilter':\n      self._ready.await(function(){\n        self.uninstallFilter(payload.params[0], end)\n      })\n      return\n\n    default:\n      next()\n      return\n  }\n}\n\nFilterSubprovider.prototype.newBlockFilter = function(cb) {\n  const self = this\n\n  self._getBlockNumber(function(err, blockNumber){\n    if (err) return cb(err)\n\n    var filter = new BlockFilter({\n      blockNumber: blockNumber,\n    })\n\n    var newBlockHandler = filter.update.bind(filter)\n    self.engine.on('block', newBlockHandler)\n    var destroyHandler = function(){\n      self.engine.removeListener('block', newBlockHandler)\n    }\n\n    self.filterIndex++\n    var hexFilterIndex = intToHex(self.filterIndex)\n    self.filters[hexFilterIndex] = filter\n    self.filterDestroyHandlers[hexFilterIndex] = destroyHandler\n\n    cb(null, hexFilterIndex)\n  })\n}\n\nFilterSubprovider.prototype.newLogFilter = function(opts, cb) {\n  const self = this\n\n  self._getBlockNumber(function(err, blockNumber){\n    if (err) return cb(err)\n\n    var filter = new LogFilter(opts)\n    var newLogHandler = filter.update.bind(filter)\n    var blockHandler = function(block, cb){\n      self._logsForBlock(block, function(err, logs){\n        if (err) return cb(err)\n        logs.forEach(newLogHandler)\n        cb()\n      })\n    }\n\n    self.filterIndex++\n    self.asyncBlockHandlers[self.filterIndex] = blockHandler\n    var hexFilterIndex = intToHex(self.filterIndex)\n    self.filters[hexFilterIndex] = filter\n\n    cb(null, hexFilterIndex)\n  })\n}\n\nFilterSubprovider.prototype.newPendingTransactionFilter = function(cb) {\n  const self = this\n\n  var filter = new PendingTransactionFilter()\n  var newTxHandler = filter.update.bind(filter)\n  var blockHandler = function(block, cb){\n    self._txHashesForBlock(block, function(err, txs){\n      if (err) return cb(err)\n      txs.forEach(newTxHandler)\n      cb()\n    })\n  }\n\n  self.filterIndex++\n  self.asyncPendingBlockHandlers[self.filterIndex] = blockHandler\n  var hexFilterIndex = intToHex(self.filterIndex)\n  self.filters[hexFilterIndex] = filter\n\n  cb(null, hexFilterIndex)\n}\n\nFilterSubprovider.prototype.getFilterChanges = function(filterId, cb) {\n  const self = this\n\n  var filter = self.filters[filterId]\n  if (!filter) console.warn('FilterSubprovider - no filter with that id:', filterId)\n  if (!filter) return cb(null, [])\n  var results = filter.getChanges()\n  filter.clearChanges()\n  cb(null, results)\n}\n\nFilterSubprovider.prototype.getFilterLogs = function(filterId, cb) {\n  const self = this\n\n  var filter = self.filters[filterId]\n  if (!filter) console.warn('FilterSubprovider - no filter with that id:', filterId)\n  if (!filter) return cb(null, [])\n  if (filter.type === 'log') {\n    self.emitPayload({\n      method: 'eth_getLogs',\n      params: [{\n        fromBlock: filter.fromBlock,\n        toBlock: filter.toBlock,\n        address: filter.address,\n        topics: filter.topics,\n      }],\n    }, function(err, res){\n      if (err) return cb(err)\n      cb(null, res.result)\n    })\n  } else {\n    var results = filter.getAllResults()\n    cb(null, results)\n  }\n}\n\nFilterSubprovider.prototype.uninstallFilter = function(filterId, cb) {\n  const self = this\n\n  var filter = self.filters[filterId]\n  if (!filter) {\n    cb(null, false)\n    return\n  }\n\n  var destroyHandler = self.filterDestroyHandlers[filterId]\n  delete self.filters[filterId]\n  delete self.asyncBlockHandlers[filterId]\n  delete self.asyncPendingBlockHandlers[filterId]\n  delete self.filterDestroyHandlers[filterId]\n  if (destroyHandler) destroyHandler()\n\n  cb(null, true)\n}\n\n// private\n\n// check for pending blocks\nFilterSubprovider.prototype.checkForPendingBlocks = function(){\n  const self = this\n  if (self.checkForPendingBlocksActive) return\n  var activePendingTxFilters = !!Object.keys(self.asyncPendingBlockHandlers).length\n  if (activePendingTxFilters) {\n    self.checkForPendingBlocksActive = true\n    self.emitPayload({\n      method: 'eth_getBlockByNumber',\n      params: ['pending', true],\n    }, function(err, res){\n      if (err) {\n        self.checkForPendingBlocksActive = false\n        console.error(err)\n        return\n      }\n      self.onNewPendingBlock(res.result, function(err){\n        if (err) console.error(err)\n        self.checkForPendingBlocksActive = false\n        setTimeout(self.checkForPendingBlocks.bind(self), self.pendingBlockTimeout)\n      })\n    })\n  }\n}\n\nFilterSubprovider.prototype.onNewPendingBlock = function(block, cb){\n  const self = this\n  // update filters\n  var updaters = valuesFor(self.asyncPendingBlockHandlers)\n  .map(function(fn){ return fn.bind(null, block) })\n  async.parallel(updaters, cb)\n}\n\nFilterSubprovider.prototype._getBlockNumber = function(cb) {\n  const self = this\n  var blockNumber = bufferToHex(self.engine.currentBlock.number)\n  cb(null, blockNumber)\n}\n\nFilterSubprovider.prototype._logsForBlock = function(block, cb) {\n  const self = this\n  var blockNumber = bufferToHex(block.number)\n  self.emitPayload({\n    method: 'eth_getLogs',\n    params: [{\n      fromBlock: blockNumber,\n      toBlock: blockNumber,\n    }],\n  }, function(err, response){\n    if (err) return cb(err)\n    if (response.error) return cb(response.error)\n    cb(null, response.result)\n  })\n\n}\n\nFilterSubprovider.prototype._txHashesForBlock = function(block, cb) {\n  const self = this\n  var txs = block.transactions\n  // short circuit if empty\n  if (txs.length === 0) return cb(null, [])\n  // txs are already hashes\n  if ('string' === typeof txs[0]) {\n    cb(null, txs)\n  // txs are obj, need to map to hashes\n  } else {\n    var results = txs.map((tx) => tx.hash)\n    cb(null, results)\n  }\n}\n\n//\n// BlockFilter\n//\n\nfunction BlockFilter(opts) {\n  // console.log('BlockFilter - new')\n  const self = this\n  self.type = 'block'\n  self.engine = opts.engine\n  self.blockNumber = opts.blockNumber\n  self.updates = []\n}\n\nBlockFilter.prototype.update = function(block){\n  // console.log('BlockFilter - update')\n  const self = this\n  var blockHash = bufferToHex(block.hash)\n  self.updates.push(blockHash)\n}\n\nBlockFilter.prototype.getChanges = function(){\n  const self = this\n  var results = self.updates\n  // console.log('BlockFilter - getChanges:', results.length)\n  return results\n}\n\nBlockFilter.prototype.clearChanges = function(){\n  // console.log('BlockFilter - clearChanges')\n  const self = this\n  self.updates = []\n}\n\n//\n// LogFilter\n//\n\nfunction LogFilter(opts) {\n  // console.log('LogFilter - new')\n  const self = this\n  self.type = 'log'\n  self.fromBlock = opts.fromBlock || 'latest'\n  self.toBlock = opts.toBlock || 'latest'\n  self.address = opts.address ? normalizeHex(opts.address) : opts.address\n  self.topics = opts.topics || []\n  self.updates = []\n  self.allResults = []\n}\n\nLogFilter.prototype.validateLog = function(log){\n  // console.log('LogFilter - validateLog:', log)\n  const self = this\n\n  // check if block number in bounds:\n  // console.log('LogFilter - validateLog - blockNumber', self.fromBlock, self.toBlock)\n  if (blockTagIsNumber(self.fromBlock) && hexToInt(self.fromBlock) >= hexToInt(log.blockNumber)) return false\n  if (blockTagIsNumber(self.toBlock) && hexToInt(self.toBlock) <= hexToInt(log.blockNumber)) return false\n\n  // address is correct:\n  // console.log('LogFilter - validateLog - address', self.address)\n  if (self.address && self.address !== log.address) return false\n\n  // topics match:\n  // topics are position-dependant\n  // topics can be nested to represent `or` [[a || b], c]\n  // topics can be null, representing a wild card for that position\n  // console.log('LogFilter - validateLog - topics', log.topics)\n  // console.log('LogFilter - validateLog - against topics', self.topics)\n  var topicsMatch = self.topics.reduce(function(previousMatched, topicPattern, index){\n    // abort in progress\n    if (!previousMatched) return false\n    // wild card\n    if (!topicPattern) return true\n    // pattern is longer than actual topics\n    var logTopic = log.topics[index]\n    if (!logTopic) return false\n    // check each possible matching topic\n    var subtopicsToMatch = Array.isArray(topicPattern) ? topicPattern : [topicPattern]\n    var topicDoesMatch = subtopicsToMatch.filter(function(subTopic){\n      return logTopic === subTopic\n    }).length > 0\n    return topicDoesMatch\n  }, true)\n\n  // console.log('LogFilter - validateLog - '+(topicsMatch ? 'approved!' : 'denied!')+' ==============')\n  return topicsMatch\n}\n\nLogFilter.prototype.update = function(log){\n  // console.log('LogFilter - update')\n  const self = this\n  // validate filter match\n  var validated = self.validateLog(log)\n  if (!validated) return\n  // add to results\n  self.updates.push(log)\n  self.allResults.push(log)\n}\n\nLogFilter.prototype.getChanges = function(){\n  // console.log('LogFilter - getChanges')\n  const self = this\n  var results = self.updates\n  return results\n}\n\nLogFilter.prototype.getAllResults = function(){\n  // console.log('LogFilter - getAllResults')\n  const self = this\n  var results = self.allResults\n  return results\n}\n\nLogFilter.prototype.clearChanges = function(){\n  // console.log('LogFilter - clearChanges')\n  const self = this\n  self.updates = []\n}\n\n//\n// PendingTxFilter\n//\n\nfunction PendingTransactionFilter(){\n  // console.log('PendingTransactionFilter - new')\n  const self = this\n  self.type = 'pendingTx'\n  self.updates = []\n  self.allResults = []\n}\n\nPendingTransactionFilter.prototype.validateUnique = function(tx){\n  const self = this\n  return self.allResults.indexOf(tx) === -1\n}\n\nPendingTransactionFilter.prototype.update = function(tx){\n  // console.log('PendingTransactionFilter - update')\n  const self = this\n  // validate filter match\n  var validated = self.validateUnique(tx)\n  if (!validated) return\n  // add to results\n  self.updates.push(tx)\n  self.allResults.push(tx)\n}\n\nPendingTransactionFilter.prototype.getChanges = function(){\n  // console.log('PendingTransactionFilter - getChanges')\n  const self = this\n  var results = self.updates\n  return results\n}\n\nPendingTransactionFilter.prototype.getAllResults = function(){\n  // console.log('PendingTransactionFilter - getAllResults')\n  const self = this\n  var results = self.allResults\n  return results\n}\n\nPendingTransactionFilter.prototype.clearChanges = function(){\n  // console.log('PendingTransactionFilter - clearChanges')\n  const self = this\n  self.updates = []\n}\n\n// util\n\nfunction normalizeHex(hexString) {\n  return hexString.slice(0, 2) === '0x' ? hexString : '0x'+hexString\n}\n\nfunction intToHex(value) {\n  return ethUtil.intToHex(value)\n}\n\nfunction hexToInt(hexString) {\n  return Number(hexString)\n}\n\nfunction bufferToHex(buffer) {\n  return '0x'+buffer.toString('hex')\n}\n\nfunction blockTagIsNumber(blockTag){\n  return blockTag && ['earliest', 'latest', 'pending'].indexOf(blockTag) === -1\n}\n\nfunction valuesFor(obj){\n  return Object.keys(obj).map(function(key){ return obj[key] })\n}\n"]},"metadata":{},"sourceType":"script"}