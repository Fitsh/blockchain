{"ast":null,"code":"var bip39 = require(\"bip39\");\n\nvar hdkey = require('ethereumjs-wallet/hdkey');\n\nvar ProviderEngine = require(\"web3-provider-engine\");\n\nvar FiltersSubprovider = require('web3-provider-engine/subproviders/filters.js');\n\nvar WalletSubprovider = require('web3-provider-engine/subproviders/wallet.js');\n\nvar Web3Subprovider = require(\"web3-provider-engine/subproviders/web3.js\");\n\nvar Web3 = require(\"web3\");\n\nfunction HDWalletProvider(mnemonic, provider_url, address_index) {\n  this.mnemonic = mnemonic;\n  this.hdwallet = hdkey.fromMasterSeed(bip39.mnemonicToSeed(mnemonic));\n\n  if (address_index == null) {\n    address_index = 0;\n  }\n\n  this.wallet_hdpath = \"m/44'/60'/0'/0/\";\n  this.wallet = this.hdwallet.derivePath(this.wallet_hdpath + address_index).getWallet();\n  this.address = \"0x\" + this.wallet.getAddress().toString(\"hex\");\n  this.engine = new ProviderEngine();\n  this.engine.addProvider(new WalletSubprovider(this.wallet, {}));\n  this.engine.addProvider(new FiltersSubprovider());\n  this.engine.addProvider(new Web3Subprovider(new Web3.providers.HttpProvider(provider_url)));\n  this.engine.start(); // Required by the provider engine.\n}\n\n;\n\nHDWalletProvider.prototype.sendAsync = function () {\n  this.engine.sendAsync.apply(this.engine, arguments);\n};\n\nHDWalletProvider.prototype.send = function () {\n  return this.engine.send.apply(this.engine, arguments);\n};\n\nHDWalletProvider.prototype.getAddress = function () {\n  return this.address;\n};\n\nmodule.exports = HDWalletProvider;","map":{"version":3,"sources":["/home/fitsh/Code/practice/blockchain/ethStudy/lotteryProject/node_modules/_truffle-hdwallet-provider@0.0.3@truffle-hdwallet-provider/index.js"],"names":["bip39","require","hdkey","ProviderEngine","FiltersSubprovider","WalletSubprovider","Web3Subprovider","Web3","HDWalletProvider","mnemonic","provider_url","address_index","hdwallet","fromMasterSeed","mnemonicToSeed","wallet_hdpath","wallet","derivePath","getWallet","address","getAddress","toString","engine","addProvider","providers","HttpProvider","start","prototype","sendAsync","apply","arguments","send","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,yBAAD,CAAnB;;AACA,IAAIE,cAAc,GAAGF,OAAO,CAAC,sBAAD,CAA5B;;AACA,IAAIG,kBAAkB,GAAGH,OAAO,CAAC,8CAAD,CAAhC;;AACA,IAAII,iBAAiB,GAAGJ,OAAO,CAAC,6CAAD,CAA/B;;AACA,IAAIK,eAAe,GAAGL,OAAO,CAAC,2CAAD,CAA7B;;AACA,IAAIM,IAAI,GAAGN,OAAO,CAAC,MAAD,CAAlB;;AAEA,SAASO,gBAAT,CAA0BC,QAA1B,EAAoCC,YAApC,EAAkDC,aAAlD,EAAiE;AAC/D,OAAKF,QAAL,GAAgBA,QAAhB;AACA,OAAKG,QAAL,GAAgBV,KAAK,CAACW,cAAN,CAAqBb,KAAK,CAACc,cAAN,CAAqBL,QAArB,CAArB,CAAhB;;AAEA,MAAIE,aAAa,IAAI,IAArB,EAA2B;AACzBA,IAAAA,aAAa,GAAG,CAAhB;AACD;;AAED,OAAKI,aAAL,GAAqB,iBAArB;AACA,OAAKC,MAAL,GAAc,KAAKJ,QAAL,CAAcK,UAAd,CAAyB,KAAKF,aAAL,GAAqBJ,aAA9C,EAA6DO,SAA7D,EAAd;AACA,OAAKC,OAAL,GAAe,OAAO,KAAKH,MAAL,CAAYI,UAAZ,GAAyBC,QAAzB,CAAkC,KAAlC,CAAtB;AAEA,OAAKC,MAAL,GAAc,IAAInB,cAAJ,EAAd;AACA,OAAKmB,MAAL,CAAYC,WAAZ,CAAwB,IAAIlB,iBAAJ,CAAsB,KAAKW,MAA3B,EAAmC,EAAnC,CAAxB;AACA,OAAKM,MAAL,CAAYC,WAAZ,CAAwB,IAAInB,kBAAJ,EAAxB;AACA,OAAKkB,MAAL,CAAYC,WAAZ,CAAwB,IAAIjB,eAAJ,CAAoB,IAAIC,IAAI,CAACiB,SAAL,CAAeC,YAAnB,CAAgCf,YAAhC,CAApB,CAAxB;AACA,OAAKY,MAAL,CAAYI,KAAZ,GAhB+D,CAgB1C;AACtB;;AAAA;;AAEDlB,gBAAgB,CAACmB,SAAjB,CAA2BC,SAA3B,GAAuC,YAAW;AAChD,OAAKN,MAAL,CAAYM,SAAZ,CAAsBC,KAAtB,CAA4B,KAAKP,MAAjC,EAAyCQ,SAAzC;AACD,CAFD;;AAIAtB,gBAAgB,CAACmB,SAAjB,CAA2BI,IAA3B,GAAkC,YAAW;AAC3C,SAAO,KAAKT,MAAL,CAAYS,IAAZ,CAAiBF,KAAjB,CAAuB,KAAKP,MAA5B,EAAoCQ,SAApC,CAAP;AACD,CAFD;;AAIAtB,gBAAgB,CAACmB,SAAjB,CAA2BP,UAA3B,GAAwC,YAAW;AACjD,SAAO,KAAKD,OAAZ;AACD,CAFD;;AAIAa,MAAM,CAACC,OAAP,GAAiBzB,gBAAjB","sourcesContent":["var bip39 = require(\"bip39\");\nvar hdkey = require('ethereumjs-wallet/hdkey');\nvar ProviderEngine = require(\"web3-provider-engine\");\nvar FiltersSubprovider = require('web3-provider-engine/subproviders/filters.js');\nvar WalletSubprovider = require('web3-provider-engine/subproviders/wallet.js');\nvar Web3Subprovider = require(\"web3-provider-engine/subproviders/web3.js\");\nvar Web3 = require(\"web3\");\n\nfunction HDWalletProvider(mnemonic, provider_url, address_index) {\n  this.mnemonic = mnemonic;\n  this.hdwallet = hdkey.fromMasterSeed(bip39.mnemonicToSeed(mnemonic));\n\n  if (address_index == null) {\n    address_index = 0;\n  }\n\n  this.wallet_hdpath = \"m/44'/60'/0'/0/\";\n  this.wallet = this.hdwallet.derivePath(this.wallet_hdpath + address_index).getWallet();\n  this.address = \"0x\" + this.wallet.getAddress().toString(\"hex\");\n\n  this.engine = new ProviderEngine();\n  this.engine.addProvider(new WalletSubprovider(this.wallet, {}));\n  this.engine.addProvider(new FiltersSubprovider());\n  this.engine.addProvider(new Web3Subprovider(new Web3.providers.HttpProvider(provider_url)));\n  this.engine.start(); // Required by the provider engine.\n};\n\nHDWalletProvider.prototype.sendAsync = function() {\n  this.engine.sendAsync.apply(this.engine, arguments);\n};\n\nHDWalletProvider.prototype.send = function() {\n  return this.engine.send.apply(this.engine, arguments);\n};\n\nHDWalletProvider.prototype.getAddress = function() {\n  return this.address;\n};\n\nmodule.exports = HDWalletProvider;\n"]},"metadata":{},"sourceType":"script"}