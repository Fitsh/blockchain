{"ast":null,"code":"var _jsxFileName = \"/home/fitsh/Code/practice/blockchain/ethStudy/lotteryProject/src/App.js\";\nimport React, { Component } from 'react';\nimport CardExampleCard from './display/ui';\nimport 'semantic-ui-css/semantic.min.css';\nimport web3 from \"./utils/initWeb3\";\nimport lotteryInstance from \"./eth/lotteryInstance\"; //function App() {\n//  return (\n//      <p> Hello, World </p>\n//  );\n//}\n\nconsole.log(lotteryInstance.methods.manager().call());\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.play = () => {\n      console.log(\"play\");\n    };\n\n    this.state = {\n      manager: '',\n      round: 0,\n      winner: '',\n      playersCount: 0,\n      balance: 0,\n      players: [],\n      currentAccount: ''\n    };\n  } // 内置钩子函数，在页面渲染之后调用\n\n\n  componentDidMount() {} // 内置钩子函数，在页面渲染之前调用\n\n\n  async componentWillMount() {\n    // 获取当前的所有地址\n    let accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n\n    let _manager = await lotteryInstance.methods.manager().call();\n\n    let _round = await lotteryInstance.methods.round().call();\n\n    let _winner = await lotteryInstance.methods.winner().call();\n\n    let _playersCount = await lotteryInstance.methods.getPlayersCount().call(); //  单位wei，需要转换为ether\n\n\n    let _balanceWei = await lotteryInstance.methods.getBalance().call(); // 从wei单位转为ether单位\n\n\n    let _balance = web3.utils.fromWei(_balanceWei, \"ether\");\n\n    let _players = await lotteryInstance.methods.getPlayers().call();\n\n    this.setState({\n      manager: _manager,\n      round: _round,\n      winner: _winner,\n      playersCount: _playersCount,\n      balance: _balance,\n      players: _players,\n      currentAccount: accounts[0]\n    });\n  } // 卸载钩子函数\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardExampleCard, {\n      manager: this.state.manager,\n      round: this.state.round,\n      winner: this.state.winner,\n      playersCount: this.state.playersCount,\n      balance: this.state.balance,\n      players: this.state.players,\n      currentAccount: this.state.currentAccount,\n      play: this.play,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/fitsh/Code/practice/blockchain/ethStudy/lotteryProject/src/App.js"],"names":["React","Component","CardExampleCard","web3","lotteryInstance","console","log","methods","manager","call","App","constructor","play","state","round","winner","playersCount","balance","players","currentAccount","componentDidMount","componentWillMount","accounts","eth","getAccounts","_manager","_round","_winner","_playersCount","getPlayersCount","_balanceWei","getBalance","_balance","utils","fromWei","_players","getPlayers","setState","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport CardExampleCard from './display/ui'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport web3 from \"./utils/initWeb3\"\nimport lotteryInstance from \"./eth/lotteryInstance\"\n\n//function App() {\n//  return (\n//      <p> Hello, World </p>\n//  );\n//}\n\nconsole.log(lotteryInstance.methods.manager().call())\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            manager: '',\n            round: 0,\n            winner: '',\n            playersCount: 0,\n            balance: 0,\n            players: [],\n            currentAccount: '',\n        }\n    }\n\n    // 内置钩子函数，在页面渲染之后调用\n    componentDidMount() {\n\n    }\n\n    // 内置钩子函数，在页面渲染之前调用\n    async componentWillMount() {\n        // 获取当前的所有地址\n        let accounts = await web3.eth.getAccounts()\n        console.log(accounts)\n        let _manager = await lotteryInstance.methods.manager().call()\n        let _round = await lotteryInstance.methods.round().call()\n        let _winner = await lotteryInstance.methods.winner().call()\n        let _playersCount = await lotteryInstance.methods.getPlayersCount().call()\n\n        //  单位wei，需要转换为ether\n        let _balanceWei = await lotteryInstance.methods.getBalance().call()\n        // 从wei单位转为ether单位\n        let _balance = web3.utils.fromWei(_balanceWei, \"ether\")\n\n        let _players = await lotteryInstance.methods.getPlayers().call()\n        this.setState({\n            manager: _manager,\n            round: _round,\n            winner: _winner,\n            playersCount: _playersCount,\n            balance: _balance,\n            players: _players,\n            currentAccount: accounts[0],\n        })\n    }\n\n    // 卸载钩子函数\n    \n\n    play = () => {\n        console.log(\"play\")\n    }\n\n    render() {\n\n      return (\n          <div>\n              <CardExampleCard\n               manager={this.state.manager} \n               round={this.state.round} \n               winner={this.state.winner} \n               playersCount={this.state.playersCount} \n               balance={this.state.balance} \n               players={this.state.players} \n               currentAccount={this.state.currentAccount} \n               play={this.play}\n              />\n          </div>\n      );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}